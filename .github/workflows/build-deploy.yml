name: "Build and Deploy to Bucket"
on: workflow_dispatch

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin

    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install app dependencies
        run: yarn

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - uses: JonasKruckenberg/tauri-build@v1
        id: tauri_build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}

      # The `artifacts` output can now be used by a different action to upload the artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: "${{ join(fromJSON(steps.tauri_build.outputs.artifacts), '\n') }}"

  # publish:
  #   needs: build-binaries
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     # Download the previously uploaded artifacts
  #     - uses: actions/download-artifact@v3
  #       id: download
  #       with:
  #         name: artifacts
  #         path: artifacts

  #     - name: get-package-version
  #       id: package-version
  #       uses: martinbeentjes/npm-get-version-action@main
  #     # And create a release with the artifacts attached
  #     - name: Upload R2
  #       uses: rajatkulkarni95/upload-r2-github-action@v0.1.1
  #       id: R2
  #       with:
  #         account_id: ${{ secrets.ACCOUNT_ID }}
  #         access_key_id: ${{ secrets.ACCESS_KEY_ID }}
  #         secret_access_key: ${{ secrets.SECRET_ACCESS_KEY }}
  #         bucket: "octarine-releases"
  #         source_dir: "./artifacts"
  #         destination_dir: ${{ steps.package-version.outputs.current-version }}

  #     - name: Delete Artifact
  #       uses: GeekyEggo/delete-artifact@v2.0.0
  #       with:
  #         name: artifacts

  # updater-json:
  # needs: publish
  # runs-on: ubuntu-20.04
  # steps:
  #   - uses: actions/checkout@v2
  #   - name: get-package-version
  #     id: package-version
  #     uses: martinbeentjes/npm-get-version-action@main
  #   - name: Update Updater JSON
  #     uses: rajatkulkarni95/tauri-app-updater-action@v0.2.1
  #     with:
  #       account_id: ${{ secrets.ACCOUNT_ID }}
  #       access_key_id: ${{ secrets.ACCESS_KEY_ID }}
  #       secret_access_key: ${{ secrets.SECRET_ACCESS_KEY }}
  #       bucket: "octarine-releases"
  #       public_bucket: ${{ secrets.CLOUDFLARE_PUBLIC_BUCKET }}
  #       app_name: "Octarine"
  #       package_version: ${{ steps.package-version.outputs.current-version }}
